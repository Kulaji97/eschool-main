/*
Deployment script for ESCHOOLING.Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ESCHOOLING.Database"
:setvar DefaultFilePrefix "ESCHOOLING.Database"
:setvar DefaultDataPath "C:\Users\KapilaPrabashvara\AppData\Local\Microsoft\VisualStudio\SSDT\ESCHOOLING"
:setvar DefaultLogPath "C:\Users\KapilaPrabashvara\AppData\Local\Microsoft\VisualStudio\SSDT\ESCHOOLING"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Rename refactoring operation with key 50de1c6f-70d6-4efa-b2b2-2e9aa7cd1f88, 358f5707-75a1-4196-8cbc-1806fa1a8c30 is skipped, element [dbo].[Order].[Email] (SqlSimpleColumn) will not be renamed to ItemId';


GO
PRINT N'Rename refactoring operation with key 3b245ea9-519c-4729-b372-747fe489fea3 is skipped, element [dbo].[TblUserRegistration].[Id] (SqlSimpleColumn) will not be renamed to UserId';


GO
PRINT N'Rename refactoring operation with key f20bc5e5-f693-4ca5-8335-16459766bd0e is skipped, element [dbo].[TblProducts].[Id] (SqlSimpleColumn) will not be renamed to ProductId';


GO
PRINT N'Rename refactoring operation with key 53970527-42f2-41fa-a5c2-4855805b2853 is skipped, element [dbo].[TblProducts].[ProductCategory] (SqlSimpleColumn) will not be renamed to ProductCategoryId';


GO
PRINT N'Rename refactoring operation with key 72b4866b-8af1-4cf3-b8de-808f10662ead is skipped, element [dbo].[TblProducts].[Image] (SqlSimpleColumn) will not be renamed to ImageName';


GO
PRINT N'Rename refactoring operation with key 6f8ae749-a580-4c86-b606-da18f2719e29 is skipped, element [dbo].[TblItemCart].[Id] (SqlSimpleColumn) will not be renamed to ItemId';


GO
PRINT N'Rename refactoring operation with key 4319da1d-634f-474f-9d56-e510cddebc58 is skipped, element [dbo].[Order].[Id] (SqlSimpleColumn) will not be renamed to OrderId';


GO
PRINT N'Rename refactoring operation with key 7cc9936c-ca58-4365-8c72-0cf885a4e1bb is skipped, element [dbo].[Order].[OrderValue] (SqlSimpleColumn) will not be renamed to Email';


GO
PRINT N'Rename refactoring operation with key 3bd2330d-d7da-4aee-93a7-0d8d40525d85 is skipped, element [dbo].[Order].[Oder] (SqlSimpleColumn) will not be renamed to OderValue';


GO
PRINT N'Rename refactoring operation with key 9aee06fc-b9be-435b-a63d-0a06432625b2, ff7fefcc-0b68-4b9c-82f4-83b85fc9652c is skipped, element [dbo].[TblOrder].[Is] (SqlSimpleColumn) will not be renamed to IsOrderAccept';


GO
PRINT N'Rename refactoring operation with key d64c7fe1-784e-4d3d-bfd4-e13f7a42d5db is skipped, element [dbo].[TblStudentMarks].[StudentMark] (SqlSimpleColumn) will not be renamed to StudentId';


GO
PRINT N'Creating Table [dbo].[TblAttendance]...';


GO
CREATE TABLE [dbo].[TblAttendance] (
    [Id]             BIGINT        IDENTITY (1, 1) NOT NULL,
    [StudentId]      BIGINT        NOT NULL,
    [IsPresent]      BIT           NULL,
    [CreatedDate]    DATETIME      NULL,
    [IsActive]       BIT           NULL,
    [Date]           DATE          NULL,
    [MonthForSearch] NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[TblBehaviour]...';


GO
CREATE TABLE [dbo].[TblBehaviour] (
    [Id]          INT            NOT NULL,
    [StudentId]   BIGINT         NULL,
    [behaviour1]  NVARCHAR (50)  NULL,
    [behaviour2]  NVARCHAR (50)  NULL,
    [behaviour3]  NVARCHAR (50)  NULL,
    [behaviour4]  NVARCHAR (50)  NULL,
    [behaviour5]  NVARCHAR (50)  NULL,
    [Description] NVARCHAR (100) NULL,
    [IsActive]    BIT            NULL,
    [CreatedDate] DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[TblChatMessage]...';


GO
CREATE TABLE [dbo].[TblChatMessage] (
    [Id]             BIGINT         NOT NULL,
    [FromUserId]     BIGINT         NOT NULL,
    [ToUserId]       BIGINT         NOT NULL,
    [TimeSent]       DATETIME       NOT NULL,
    [HasRecieverRed] BIT            NOT NULL,
    [MessageText]    NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[TblEvents]...';


GO
CREATE TABLE [dbo].[TblEvents] (
    [Id]        INT           NOT NULL,
    [EventName] NVARCHAR (50) NULL,
    [Date]      DATETIME      NULL,
    [Place]     NVARCHAR (50) NULL,
    [Time]      NVARCHAR (50) NULL,
    [IsActive]  BIT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[TblMessage]...';


GO
CREATE TABLE [dbo].[TblMessage] (
    [Id]             BIGINT         IDENTITY (1, 1) NOT NULL,
    [FromUserId]     INT            NOT NULL,
    [ToUserId]       INT            NOT NULL,
    [TimeSent]       DATETIME       NOT NULL,
    [HasRecieverRed] BIT            NOT NULL,
    [MessageText]    NVARCHAR (MAX) NOT NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];


GO
PRINT N'Creating Table [dbo].[TblStudentMarks]...';


GO
CREATE TABLE [dbo].[TblStudentMarks] (
    [Id]            INT           NOT NULL,
    [StudentId]     BIGINT        NULL,
    [Subject]       NVARCHAR (50) NULL,
    [PredictedMark] NVARCHAR (50) NULL,
    [IsActive]      BIT           NULL,
    [CreatedDate]   DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[TblUserRegistration]...';


GO
CREATE TABLE [dbo].[TblUserRegistration] (
    [UserId]      BIGINT         IDENTITY (1, 1) NOT NULL,
    [Username]    VARCHAR (50)   NULL,
    [Email]       VARCHAR (50)   NULL,
    [Password]    VARCHAR (50)   NULL,
    [Address]     VARCHAR (50)   NULL,
    [MobileNo]    VARCHAR (15)   NULL,
    [IsActive]    BIT            NULL,
    [UserType]    INT            NULL,
    [CreatedDate] DATETIME       NULL,
    [Grade]       INT            NULL,
    [IsPresent]   BIT            NULL,
    [ImageUrl]    NVARCHAR (500) NULL,
    [IsOnline]    BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[TblChatMessage]...';


GO
ALTER TABLE [dbo].[TblChatMessage]
    ADD DEFAULT 0 FOR [HasRecieverRed];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[TblUserRegistration]...';


GO
ALTER TABLE [dbo].[TblUserRegistration]
    ADD DEFAULT 0 FOR [IsOnline];


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[TblAttendance]...';


GO
ALTER TABLE [dbo].[TblAttendance] WITH NOCHECK
    ADD FOREIGN KEY ([StudentId]) REFERENCES [dbo].[TblUserRegistration] ([UserId]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[TblBehaviour]...';


GO
ALTER TABLE [dbo].[TblBehaviour] WITH NOCHECK
    ADD FOREIGN KEY ([StudentId]) REFERENCES [dbo].[TblUserRegistration] ([UserId]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[TblStudentMarks]...';


GO
ALTER TABLE [dbo].[TblStudentMarks] WITH NOCHECK
    ADD FOREIGN KEY ([StudentId]) REFERENCES [dbo].[TblUserRegistration] ([UserId]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3b245ea9-519c-4729-b372-747fe489fea3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3b245ea9-519c-4729-b372-747fe489fea3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f20bc5e5-f693-4ca5-8335-16459766bd0e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f20bc5e5-f693-4ca5-8335-16459766bd0e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '53970527-42f2-41fa-a5c2-4855805b2853')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('53970527-42f2-41fa-a5c2-4855805b2853')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '72b4866b-8af1-4cf3-b8de-808f10662ead')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('72b4866b-8af1-4cf3-b8de-808f10662ead')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6f8ae749-a580-4c86-b606-da18f2719e29')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6f8ae749-a580-4c86-b606-da18f2719e29')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4319da1d-634f-474f-9d56-e510cddebc58')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4319da1d-634f-474f-9d56-e510cddebc58')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '50de1c6f-70d6-4efa-b2b2-2e9aa7cd1f88')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('50de1c6f-70d6-4efa-b2b2-2e9aa7cd1f88')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '358f5707-75a1-4196-8cbc-1806fa1a8c30')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('358f5707-75a1-4196-8cbc-1806fa1a8c30')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7cc9936c-ca58-4365-8c72-0cf885a4e1bb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7cc9936c-ca58-4365-8c72-0cf885a4e1bb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3bd2330d-d7da-4aee-93a7-0d8d40525d85')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3bd2330d-d7da-4aee-93a7-0d8d40525d85')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9aee06fc-b9be-435b-a63d-0a06432625b2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9aee06fc-b9be-435b-a63d-0a06432625b2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ff7fefcc-0b68-4b9c-82f4-83b85fc9652c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ff7fefcc-0b68-4b9c-82f4-83b85fc9652c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd64c7fe1-784e-4d3d-bfd4-e13f7a42d5db')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d64c7fe1-784e-4d3d-bfd4-e13f7a42d5db')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.TblAttendance'), OBJECT_ID(N'dbo.TblBehaviour'), OBJECT_ID(N'dbo.TblStudentMarks'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
